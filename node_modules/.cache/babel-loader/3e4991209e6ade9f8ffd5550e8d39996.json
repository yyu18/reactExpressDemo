{"ast":null,"code":"var _jsxFileName = \"/home/hubertyu/Code/reactExpressDemo/src/loginRegister/forgotPassword/ResetPassword.js\";\nimport React, { useState, useMemo } from 'react';\nimport { useLocation } from 'react-router-dom';\nvar resetPassword = 'http://192.168.2.24:4000/resetPassword';\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nconst ResetPassword = () => {\n  let query = useQuery();\n  const [errors, setErrors] = useState({});\n  useMemo(() => {\n    if (errors.status !== undefined && query.get('token')) {\n      fetch(resetPassword, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          token: query.get('token')\n        })\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n\n        if (data.status === false) {\n          setErrors(data);\n        }\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n    }\n  }, [errors, setErrors, query]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, errors.status ? /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, errors.info) : /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"hello world\"));\n};\n\nexport default ResetPassword;","map":{"version":3,"sources":["/home/hubertyu/Code/reactExpressDemo/src/loginRegister/forgotPassword/ResetPassword.js"],"names":["React","useState","useMemo","useLocation","resetPassword","useQuery","URLSearchParams","search","ResetPassword","query","errors","setErrors","status","undefined","get","fetch","method","headers","body","JSON","stringify","token","then","response","json","data","console","log","catch","error","info"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,OAAzB,QAAwC,OAAxC;AACA,SAASC,WAAT,QAA2B,kBAA3B;AACA,IAAIC,aAAa,GAAG,wCAApB;;AACA,SAASC,QAAT,GAAoB;AAChB,SAAO,IAAIC,eAAJ,CAAoBH,WAAW,GAAGI,MAAlC,CAAP;AACD;;AAEH,MAAMC,aAAa,GAAG,MAAI;AACtB,MAAIC,KAAK,GAAGJ,QAAQ,EAApB;AACA,QAAM,CAACK,MAAD,EAAQC,SAAR,IAAqBV,QAAQ,CAAC,EAAD,CAAnC;AAEAC,EAAAA,OAAO,CAAC,MAAI;AACR,QAAGQ,MAAM,CAACE,MAAP,KAAgBC,SAAhB,IAA6BJ,KAAK,CAACK,GAAN,CAAU,OAAV,CAAhC,EAAmD;AAC3CC,MAAAA,KAAK,CAACX,aAAD,EAAgB;AACjBY,QAAAA,MAAM,EAAE,MADS;AAEjBC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAFQ;AAKjBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,UAAAA,KAAK,EAACZ,KAAK,CAACK,GAAN,CAAU,OAAV;AADW,SAAf;AALW,OAAhB,CAAL,CASGQ,IATH,CASQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EATpB,EAUGF,IAVH,CAUQG,IAAI,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,YAAGA,IAAI,CAACb,MAAL,KAAc,KAAjB,EAAuB;AACnBD,UAAAA,SAAS,CAACc,IAAD,CAAT;AACH;AACF,OAfH,EAeKG,KAfL,CAeYC,KAAD,IAAW;AAChBH,QAAAA,OAAO,CAACG,KAAR,CAAc,QAAd,EAAwBA,KAAxB;AACH,OAjBH;AAkBC;AACJ,GArBF,EAqBG,CAACnB,MAAD,EAAQC,SAAR,EAAkBF,KAAlB,CArBH,CAAP;AAuBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIC,MAAM,CAACE,MAAP,gBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,MAAM,CAACoB,IAAZ,CADA,gBAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALJ,CADJ;AAUH,CArCD;;AAsCA,eAAetB,aAAf","sourcesContent":["import React, { useState,useMemo } from 'react';\nimport { useLocation} from 'react-router-dom'\nvar resetPassword = 'http://192.168.2.24:4000/resetPassword';\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n  }\n\nconst ResetPassword = ()=>{\n    let query = useQuery();\n    const [errors,setErrors] = useState({});\n\n    useMemo(()=>{\n        if(errors.status!==undefined && query.get('token')){\n                fetch(resetPassword, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({\n                        token:query.get('token')\n                    }),\n                  })\n                  .then(response => response.json())\n                  .then(data => {\n                    console.log(data);\n                    if(data.status===false){\n                        setErrors(data);\n                    }\n                  }).catch((error) => {\n                      console.error('Error:', error);\n                  });  \n                }\n            },[errors,setErrors,query])\n\n    return(\n        <div>\n        {\n            errors.status ? \n            <h1>{errors.info}</h1>\n            : \n            <h1>hello world</h1>\n        }\n        </div> \n    )\n} \nexport default ResetPassword; "]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var checkEmail = 'http://192.168.2.24:4000/checkEmail';\nexport const Validate = async userInfo => {\n  let errors = {};\n\n  if (userInfo.email) {\n    if (userInfo.email.length > 0) {\n      if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(userInfo.email)) {\n        errors.email = 'Email Is Invalidated';\n      } else {\n        const response = await fetch(checkEmail, {\n          method: 'POST',\n          // or 'PUT'\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: userInfo.email\n          })\n        });\n        const data = await response.json();\n\n        if (data.status !== 'success') {\n          errors.email = data.status;\n        }\n      }\n    } else {\n      errors.email = 'Email Address Is Required';\n    }\n  }\n\n  if (userInfo.password) {\n    if (userInfo.password.length === 0) {\n      errors.password = 'Password Is Required';\n    } else if (userInfo.password.length < 6) {\n      errors.password = 'Password Length Must Be Greater Than 6';\n    }\n  }\n\n  if (userInfo.username) {\n    if (userInfo.username.length === 0) {\n      errors.username = \"Username Is Required\";\n    }\n  }\n\n  if (userInfo.confirmPassword) {\n    if (userInfo.confirmPassword.length === 0) {\n      errors.confirmPassword = 'Password Is Required';\n    } else {\n      if (userInfo.confirmPassword !== userInfo.password) {\n        errors.confirmPassword = \"Password Is Not Compared\";\n      }\n    }\n  }\n\n  return errors;\n};","map":{"version":3,"sources":["/home/hubertyu/Code/reactExpressDemo/src/loginRegister/formValidator.js"],"names":["checkEmail","Validate","userInfo","errors","email","length","test","response","fetch","method","headers","body","JSON","stringify","data","json","status","password","username","confirmPassword"],"mappings":"AAAA,IAAIA,UAAU,GAAG,qCAAjB;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAOC,QAAP,IAAkB;AACtC,MAAIC,MAAM,GAAG,EAAb;;AACJ,MAAGD,QAAQ,CAACE,KAAZ,EAAkB;AAChB,QAAGF,QAAQ,CAACE,KAAT,CAAeC,MAAf,GAAsB,CAAzB,EAA2B;AACzB,UAAI,CAAC,gDAAgDC,IAAhD,CAAqDJ,QAAQ,CAACE,KAA9D,CAAL,EACA;AACED,QAAAA,MAAM,CAACC,KAAP,GAAe,sBAAf;AACD,OAHD,MAGO;AACL,cAAMG,QAAQ,GAAE,MAAMC,KAAK,CAACR,UAAD,EAAa;AACtCS,UAAAA,MAAM,EAAE,MAD8B;AACtB;AAChBC,UAAAA,OAAO,EAAE;AACL,4BAAgB;AADX,WAF6B;AAKtCC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBT,YAAAA,KAAK,EAACF,QAAQ,CAACE;AADI,WAAf;AALgC,SAAb,CAA3B;AASA,cAAMU,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAnB;;AACA,YAAGD,IAAI,CAACE,MAAL,KAAc,SAAjB,EAA2B;AACzBb,UAAAA,MAAM,CAACC,KAAP,GAAeU,IAAI,CAACE,MAApB;AACD;AACF;AACF,KAnBD,MAmBO;AACLb,MAAAA,MAAM,CAACC,KAAP,GAAe,2BAAf;AACD;AACF;;AACD,MAAGF,QAAQ,CAACe,QAAZ,EAAqB;AACnB,QAAGf,QAAQ,CAACe,QAAT,CAAkBZ,MAAlB,KAA2B,CAA9B,EAAgC;AAChCF,MAAAA,MAAM,CAACc,QAAP,GAAkB,sBAAlB;AACD,KAFC,MAEK,IAAGf,QAAQ,CAACe,QAAT,CAAkBZ,MAAlB,GAAyB,CAA5B,EAA8B;AACnCF,MAAAA,MAAM,CAACc,QAAP,GAAkB,wCAAlB;AACD;AACA;;AAGD,MAAGf,QAAQ,CAACgB,QAAZ,EAAqB;AACnB,QAAGhB,QAAQ,CAACgB,QAAT,CAAkBb,MAAlB,KAA6B,CAAhC,EAAmC;AACjCF,MAAAA,MAAM,CAACe,QAAP,GAAkB,sBAAlB;AACD;AACF;;AAED,MAAGhB,QAAQ,CAACiB,eAAZ,EAA4B;AAC1B,QAAGjB,QAAQ,CAACiB,eAAT,CAAyBd,MAAzB,KAAkC,CAArC,EAAuC;AACrCF,MAAAA,MAAM,CAACgB,eAAP,GAAyB,sBAAzB;AACD,KAFD,MAEO;AACL,UAAGjB,QAAQ,CAACiB,eAAT,KAA2BjB,QAAQ,CAACe,QAAvC,EAAiD;AAC/Cd,QAAAA,MAAM,CAACgB,eAAP,GAAyB,0BAAzB;AACD;AACF;AACF;;AAEG,SAAOhB,MAAP;AACD,CApDI","sourcesContent":["var checkEmail = 'http://192.168.2.24:4000/checkEmail';\nexport const Validate = async (userInfo)=>{\n    let errors = {}\nif(userInfo.email){\n  if(userInfo.email.length>0){\n    if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(userInfo.email))\n    {\n      errors.email = 'Email Is Invalidated';\n    } else {\n      const response =await fetch(checkEmail, {\n        method: 'POST', // or 'PUT'\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          email:userInfo.email\n        })\n      })\n      const data = await response.json();\n      if(data.status!=='success'){\n        errors.email = data.status;\n      }\n    }\n  } else {\n    errors.email = 'Email Address Is Required'\n  }\n}\nif(userInfo.password){    \n  if(userInfo.password.length===0){\n  errors.password = 'Password Is Required';\n} else if(userInfo.password.length<6){\n  errors.password = 'Password Length Must Be Greater Than 6';\n} \n}\n  \n\nif(userInfo.username){\n  if(userInfo.username.length === 0) {\n    errors.username = \"Username Is Required\";\n  }\n}\n   \nif(userInfo.confirmPassword){\n  if(userInfo.confirmPassword.length===0){\n    errors.confirmPassword = 'Password Is Required';\n  } else {\n    if(userInfo.confirmPassword!==userInfo.password) {\n      errors.confirmPassword = \"Password Is Not Compared\";\n    } \n  }\n}\n   \n    return errors;\n  }\n\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/hubertyu/Code/reactExpressDemo/src/loginRegister/components/header/Register.js\";\nimport React, { useState, useContext } from 'react';\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport { FormContext } from '../../context';\nimport { Validate } from '../../formValidator';\nimport { setCookie } from './MenuFunctionController';\nvar registerURL = 'http://192.168.2.24:4000/register';\nexport const Register = () => {\n  const [show, setShow] = useState(false);\n  const [formErrors, setErrors] = useState({});\n  const formContext = useContext(FormContext);\n\n  const handleClose = () => {\n    setShow(false);\n    setErrors({});\n  };\n\n  const handleShow = () => setShow(true);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    console.log(formContext.RegisterFormInfo);\n    Validate(formContext.RegisterFormInfo).then(errors => {\n      setErrors(errors);\n\n      if (Object.keys(errors).length === 0) {\n        fetch(registerURL, {\n          method: 'POST',\n          // or 'PUT'\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(formContext.RegisterFormInfo)\n        }).then(response => response.json()).then(data => {\n          if (data.status === 'success') {\n            setCookie('token', data.token);\n            setCookie('username', data.username);\n            setCookie('email', data.email);\n            formContext.dispatch({\n              type: 'register',\n              payload: data\n            });\n          }\n        }).catch(error => {\n          console.error('Error:', error);\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: handleShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    backdrop: \"static\",\n    keyboard: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"Register The Account\")), /*#__PURE__*/React.createElement(Form, {\n    noValidate: true,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formUsername\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, \"User Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    type: \"text\",\n    name: \"username\",\n    placeholder: \"Enter Username\",\n    onChange: event => {\n      formContext.setRegisterForm({ ...formContext.RegisterFormInfo,\n        [event.currentTarget.name]: event.currentTarget.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }), formErrors.username && /*#__PURE__*/React.createElement(Form.Text, {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, formErrors.username)), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, \"User Account\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Enter Email\",\n    onChange: event => {\n      formContext.setRegisterForm({ ...formContext.RegisterFormInfo,\n        [event.currentTarget.name]: event.currentTarget.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }), formErrors.email && /*#__PURE__*/React.createElement(Form.Text, {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 27\n    }\n  }, formErrors.email)), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Password\",\n    onChange: event => {\n      formContext.setRegisterForm({ ...formContext.RegisterFormInfo,\n        [event.currentTarget.name]: event.currentTarget.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }), formErrors.password && /*#__PURE__*/React.createElement(Form.Text, {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 27\n    }\n  }, formErrors.password)), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formConfirmPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    placeholder: \"Password\",\n    onChange: event => {\n      formContext.setRegisterForm({ ...formContext.RegisterFormInfo,\n        [event.currentTarget.name]: event.currentTarget.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }), formErrors.confirmPassword && /*#__PURE__*/React.createElement(Form.Text, {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 30\n    }\n  }, formErrors.confirmPassword))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, \"Login\")))));\n};","map":{"version":3,"sources":["/home/hubertyu/Code/reactExpressDemo/src/loginRegister/components/header/Register.js"],"names":["React","useState","useContext","Modal","Button","Form","FormContext","Validate","setCookie","registerURL","Register","show","setShow","formErrors","setErrors","formContext","handleClose","handleShow","handleSubmit","event","preventDefault","stopPropagation","console","log","RegisterFormInfo","then","errors","Object","keys","length","fetch","method","headers","body","JSON","stringify","response","json","data","status","token","username","email","dispatch","type","payload","catch","error","setRegisterForm","currentTarget","name","value","color","password","confirmPassword"],"mappings":"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","sourcesContent":["import React, {useState,useContext} from 'react';\nimport { Modal,Button,Form } from 'react-bootstrap';\nimport {FormContext} from '../../context';\nimport {Validate} from '../../formValidator';\nimport {setCookie} from './MenuFunctionController';\nvar registerURL = 'http://192.168.2.24:4000/register';\n\nexport const Register = () => {\n    const [show, setShow] = useState(false);\n    const [formErrors,setErrors] = useState({})\n\n    const formContext = useContext(FormContext);\n\n    const handleClose = () => {\n      setShow(false);\n      setErrors({});\n    };\n    const handleShow = () => setShow(true);\n    \n    const handleSubmit = (event) => {\n      event.preventDefault();\n      event.stopPropagation();\n      console.log(formContext.RegisterFormInfo);\n      Validate(formContext.RegisterFormInfo).then(errors=>{\n        setErrors(errors);\n        if(Object.keys(errors).length === 0 ){\n            fetch(registerURL, {\n              method: 'POST', // or 'PUT'\n              headers: {\n                  'Content-Type': 'application/json',\n              },\n              body: JSON.stringify(formContext.RegisterFormInfo),\n            })\n            .then(response => response.json())\n            .then(data => {\n                if(data.status==='success'){\n                    setCookie('token',data.token);\n                    setCookie('username',data.username);\n                    setCookie('email',data.email);\n                    formContext.dispatch({type:'register',payload:data})\n                }\n            }).catch((error) => {\n                console.error('Error:', error);\n            });\n        }\n      });\n    }\n\n    return (\n      <>\n        <Button variant=\"primary\" onClick={handleShow}>\n          Register\n        </Button>\n  \n        <Modal\n          show={show}\n          onHide={handleClose}\n          backdrop=\"static\"\n          keyboard={false}\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>Register The Account</Modal.Title>\n          </Modal.Header>\n\n            <Form noValidate onSubmit={handleSubmit}>\n              <Modal.Body>\n\n                <Form.Group controlId=\"formUsername\">\n                    <Form.Label>User Name</Form.Label>\n                    <Form.Control required type=\"text\" name=\"username\" placeholder=\"Enter Username\" onChange={\n                      (event)=>\n                        {\n                          formContext.setRegisterForm({\n                            ...formContext.RegisterFormInfo,\n                            [event.currentTarget.name]:event.currentTarget.value\n                          })\n                        }\n                      }    />   \n                  {\n                    formErrors.username&&\n                    <Form.Text style={{color:'red'}}>\n                    {formErrors.username}\n                    </Form.Text>\n                  }   \n                  \n                </Form.Group>\n\n                  <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>User Account</Form.Label>\n                    <Form.Control required type=\"email\" name=\"email\" placeholder=\"Enter Email\" onChange={\n                         (event)=>\n                         {\n                           formContext.setRegisterForm({\n                             ...formContext.RegisterFormInfo,\n                             [event.currentTarget.name]:event.currentTarget.value\n                           })\n                         }\n                      }    />   \n                      {formErrors.email && \n                          <Form.Text style={{color:'red'}}>\n                          {formErrors.email}\n                          </Form.Text>\n                          }   \n                \n                  </Form.Group>\n\n                  <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" onChange={\n                         (event)=>\n                         {\n                           formContext.setRegisterForm({\n                             ...formContext.RegisterFormInfo,\n                             [event.currentTarget.name]:event.currentTarget.value\n                           })\n                         }\n                      } />\n                      {\n                        formErrors.password &&\n                          <Form.Text style={{color:'red'}}>\n                          {formErrors.password}\n                          </Form.Text>\n                       }\n                   \n                  </Form.Group>\n\n                  <Form.Group controlId=\"formConfirmPassword\">\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control type=\"password\" name=\"confirmPassword\" placeholder=\"Password\" onChange={\n                         (event)=>\n                         {\n                           formContext.setRegisterForm({\n                             ...formContext.RegisterFormInfo,\n                             [event.currentTarget.name]:event.currentTarget.value\n                           })\n                         }\n                      } />\n                      {\n                            formErrors.confirmPassword && \n                             <Form.Text style={{color:'red'}}>\n                             {formErrors.confirmPassword}\n                             </Form.Text>\n                      }\n             \n                  </Form.Group>\n\n\n              </Modal.Body>\n              <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                  Close\n                </Button>\n                <Button type='submit' variant=\"primary\">Login</Button>\n              </Modal.Footer>\n            </Form>\n\n        </Modal>\n      </>\n    );\n  }\n\n\n  \n"]},"metadata":{},"sourceType":"module"}
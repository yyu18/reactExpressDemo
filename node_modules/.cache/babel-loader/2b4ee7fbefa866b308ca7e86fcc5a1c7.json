{"ast":null,"code":"var _jsxFileName = \"/home/hubertyu/Code/reactExpressDemo/src/loginRegister/components/header/Register.js\";\nimport React, { useState, useContext } from 'react';\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport { FormContext } from '../../context';\nimport { Validate } from '../../formValidator';\nexport const Register = () => {\n  const [show, setShow] = useState(false);\n  const [formErrors, setErrors] = useState({});\n  const formContext = useContext(FormContext);\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const handleShow = () => setShow(true);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const errors = Validate(formContext.state);\n    setErrors(errors);\n\n    if (Object.keys(errors).length === 0) {\n      formContext.dispatch({\n        type: 'register',\n        payload: formContext.state\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: handleShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    backdrop: \"static\",\n    keyboard: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Login The Account\")), /*#__PURE__*/React.createElement(Form, {\n    noValidate: true,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, \"User Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    type: \"text\",\n    name: \"username\",\n    placeholder: \"Enter Username\",\n    onChange: event => {\n      formContext.dispatch({\n        type: 'changeUserInfo',\n        payload: event.currentTarget\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }), formErrors.username && /*#__PURE__*/React.createElement(Form.Text, {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, formErrors.username)), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, \"User Account\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Enter Email\",\n    onChange: event => {\n      formContext.dispatch({\n        type: 'changeUserInfo',\n        payload: event.currentTarget\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }), formErrors.email && /*#__PURE__*/React.createElement(Form.Text, {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 27\n    }\n  }, formErrors.email)), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Password\",\n    onChange: event => {\n      formContext.dispatch({\n        type: 'changeUserInfo',\n        payload: event.currentTarget\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }), formErrors.password && /*#__PURE__*/React.createElement(Form.Text, {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 27\n    }\n  }, formErrors.password)), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    placeholder: \"Password\",\n    onChange: event => {\n      formContext.dispatch({\n        type: 'changeUserInfo',\n        payload: event.currentTarget\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }), formErrors.confirmPassword && /*#__PURE__*/React.createElement(Form.Text, {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 30\n    }\n  }, formErrors.confirmPassword))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, \"Login\")))));\n};","map":{"version":3,"sources":["/home/hubertyu/Code/reactExpressDemo/src/loginRegister/components/header/Register.js"],"names":["React","useState","useContext","Modal","Button","Form","FormContext","Validate","Register","show","setShow","formErrors","setErrors","formContext","handleClose","handleShow","handleSubmit","event","preventDefault","stopPropagation","errors","state","Object","keys","length","dispatch","type","payload","currentTarget","username","color","email","password","confirmPassword"],"mappings":"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","sourcesContent":["import React, {useState,useContext} from 'react';\nimport { Modal,Button,Form } from 'react-bootstrap';\nimport {FormContext} from '../../context';\nimport {Validate} from '../../formValidator';\n\nexport const Register = () => {\n    const [show, setShow] = useState(false);\n    const [formErrors,setErrors] = useState({})\n\n    const formContext = useContext(FormContext);\n\n    const handleClose = () => {\n      setShow(false);\n    };\n    const handleShow = () => setShow(true);\n    \n    const handleSubmit = (event) => {\n      event.preventDefault();\n      event.stopPropagation();\n      const errors = Validate(formContext.state);\n      setErrors(errors);\n      if(Object.keys(errors).length === 0 ){\n        formContext.dispatch({type:'register',payload:formContext.state})\n      }\n    }\n    return (\n      <>\n        <Button variant=\"primary\" onClick={handleShow}>\n          Register\n        </Button>\n  \n        <Modal\n          show={show}\n          onHide={handleClose}\n          backdrop=\"static\"\n          keyboard={false}\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>Login The Account</Modal.Title>\n          </Modal.Header>\n\n            <Form noValidate onSubmit={handleSubmit}>\n              <Modal.Body>\n\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>User Name</Form.Label>\n                    <Form.Control required type=\"text\" name=\"username\" placeholder=\"Enter Username\" onChange={\n                      (event)=>\n                        {\n                          formContext.dispatch({\n                            type:'changeUserInfo',\n                            payload:event.currentTarget\n                          })\n                        }\n                      }    />   \n                  {\n                    formErrors.username&&\n                    <Form.Text style={{color:'red'}}>\n                    {formErrors.username}\n                    </Form.Text>\n                  }   \n                  \n                </Form.Group>\n\n                  <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>User Account</Form.Label>\n                    <Form.Control required type=\"email\" name=\"email\" placeholder=\"Enter Email\" onChange={\n                      (event)=>\n                        {\n                          formContext.dispatch({\n                            type:'changeUserInfo',\n                            payload:event.currentTarget\n                          })\n                        }\n                      }    />   \n                      {formErrors.email && \n                          <Form.Text style={{color:'red'}}>\n                          {formErrors.email}\n                          </Form.Text>\n                          }   \n                \n                  </Form.Group>\n\n                  <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" onChange={\n                      (event)=>\n                        {\n                          formContext.dispatch({\n                            type:'changeUserInfo',\n                            payload:event.currentTarget\n                          })\n                        }\n                      } />\n                      {\n                        formErrors.password &&\n                          <Form.Text style={{color:'red'}}>\n                          {formErrors.password}\n                          </Form.Text>\n                       }\n                   \n                  </Form.Group>\n\n                  <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control type=\"password\" name=\"confirmPassword\" placeholder=\"Password\" onChange={\n                      (event)=>\n                        {\n                          formContext.dispatch({\n                            type:'changeUserInfo',\n                            payload:event.currentTarget\n                          })\n                        }\n                      } />\n                      {\n                            formErrors.confirmPassword && \n                             <Form.Text style={{color:'red'}}>\n                             {formErrors.confirmPassword}\n                             </Form.Text>\n                      }\n             \n                  </Form.Group>\n\n\n              </Modal.Body>\n              <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                  Close\n                </Button>\n                <Button type='submit' variant=\"primary\">Login</Button>\n              </Modal.Footer>\n            </Form>\n\n        </Modal>\n      </>\n    );\n  }\n\n\n  \n"]},"metadata":{},"sourceType":"module"}
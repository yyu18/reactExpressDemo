{"ast":null,"code":"var _jsxFileName = \"/home/hubertyu/Code/reactExpressDemo/src/loginRegister/components/header/Login.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport { FormContext } from '../../context';\nimport { loginValidate } from '../../formValidator';\nimport { setCookie } from './MenuFunctionController';\nvar loginUrl = 'http://192.168.2.24:4000/login';\nexport const Login = () => {\n  const [show, setShow] = useState(false);\n  const [formErrors, setErrors] = useState({});\n  const formContext = useContext(FormContext);\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const handleShow = () => setShow(true);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    loginValidate(formContext.LoginFormInfo).then(errors => {\n      setErrors(errors);\n\n      if (Object.keys(errors).length === 0) {\n        fetch(loginUrl, {\n          method: 'POST',\n          // or 'PUT'\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(formContext.LoginFormInfo)\n        }).then(response => response.json()).then(data => {\n          if (data.status === 'failed') {\n            setErrors({\n              info: data.info\n            });\n          }\n\n          if (data.status === 'success') {\n            setCookie('token', data.token);\n            setCookie('username', data.username);\n            setCookie('email', data.email);\n            setShow(false);\n            formContext.dispatch({\n              type: 'login',\n              payload: data\n            });\n          }\n        }).catch(error => {\n          console.error('Error:', error);\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: handleShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    backdrop: \"static\",\n    keyboard: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"Login The Account\")), /*#__PURE__*/React.createElement(Form, {\n    noValidate: true,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, \"User Account\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Enter Email\",\n    onChange: event => {\n      formContext.setLoginForm({ ...formContext.LoginFormInfo,\n        [event.currentTarget.name]: event.currentTarget.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }), formErrors.email && /*#__PURE__*/React.createElement(Form.Text, {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, formErrors.email)), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Password\",\n    onChange: event => {\n      formContext.setLoginForm({ ...formContext.LoginFormInfo,\n        [event.currentTarget.name]: event.currentTarget.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }), formErrors.password && /*#__PURE__*/React.createElement(Form.Text, {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }\n  }, formErrors.password)), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicCheckbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"checkbox\",\n    name: \"checkbox\",\n    label: \"Remember Me\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  })), formErrors.info && /*#__PURE__*/React.createElement(Form.Text, {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 19\n    }\n  }, formErrors.info)), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, \"Login\")))));\n};","map":{"version":3,"sources":["/home/hubertyu/Code/reactExpressDemo/src/loginRegister/components/header/Login.js"],"names":["React","useState","useContext","useEffect","Modal","Button","Form","FormContext","loginValidate","setCookie","loginUrl","Login","show","setShow","formErrors","setErrors","formContext","handleClose","handleShow","handleSubmit","event","preventDefault","stopPropagation","LoginFormInfo","then","errors","Object","keys","length","fetch","method","headers","body","JSON","stringify","response","json","data","status","info","token","username","email","dispatch","type","payload","catch","error","console","setLoginForm","currentTarget","name","value","color","password"],"mappings":"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","sourcesContent":["import React, {useState,useContext, useEffect} from 'react';\nimport { Modal,Button,Form } from 'react-bootstrap';\nimport {FormContext} from '../../context';\nimport {loginValidate} from '../../formValidator';\nimport {setCookie} from './MenuFunctionController';\nvar loginUrl = 'http://192.168.2.24:4000/login';\nexport const Login = () => {\n    const [show, setShow] = useState(false);\n\n    const [formErrors,setErrors] = useState({})\n\n    const formContext = useContext(FormContext);\n\n    const handleClose = () => {\n      setShow(false);\n    };\n    const handleShow = () => setShow(true);\n    \n    const handleSubmit = (event) => {\n      event.preventDefault();\n      event.stopPropagation();\n      loginValidate(formContext.LoginFormInfo).then(errors=>{\n        setErrors(errors);\n        if(Object.keys(errors).length === 0 ){\n          fetch(loginUrl, {\n            method: 'POST', // or 'PUT'\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(formContext.LoginFormInfo),\n          })\n          .then(response => response.json())\n          .then(data => {\n            if(data.status==='failed'){\n              setErrors({\n                info:data.info       \n              })\n            }\n              if(data.status==='success'){\n                  setCookie('token',data.token);\n                  setCookie('username',data.username);\n                  setCookie('email',data.email);\n                  setShow(false);\n                  formContext.dispatch({type:'login',payload:data})\n              }\n          }).catch((error) => {\n              console.error('Error:', error);\n          });\n      }\n      })\n    }\n\n    return (\n      <>\n        <Button variant=\"primary\" onClick={handleShow}>\n          Login\n        </Button>\n  \n        <Modal\n          show={show}\n          onHide={handleClose}\n          backdrop=\"static\"\n          keyboard={false}\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>Login The Account</Modal.Title>\n          \n          </Modal.Header>\n\n            <Form noValidate onSubmit={handleSubmit}>\n              <Modal.Body>\n          \n                  <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>User Account</Form.Label>\n                    <Form.Control required type=\"email\" name=\"email\" placeholder=\"Enter Email\" onChange={\n                       (event)=>\n                       {\n                         formContext.setLoginForm({\n                           ...formContext.LoginFormInfo,\n                           [event.currentTarget.name]:event.currentTarget.value\n                         })\n                       }\n                      }    />      \n          {\n            formErrors.email&&\n              <Form.Text style={{color:'red'}}>\n                {formErrors.email}\n              </Form.Text>\n          } \n                  </Form.Group>\n\n                  <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" onChange={\n                      (event)=>\n                      {\n                        formContext.setLoginForm({\n                          ...formContext.LoginFormInfo,\n                          [event.currentTarget.name]:event.currentTarget.value\n                        })\n                      }\n                      } />\n              {\n                formErrors.password &&\n                  <Form.Text style={{color:'red'}}>\n                    {formErrors.password}\n                  </Form.Text>\n                }\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formBasicCheckbox\">\n                    <Form.Check type=\"checkbox\" name=\"checkbox\" label=\"Remember Me\" />\n                  </Form.Group>\n\n                  {\n                formErrors.info &&\n                  <Form.Text style={{color:'red'}}>\n                    {formErrors.info}\n                  </Form.Text>\n              }\n\n              </Modal.Body>\n              <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                  Close\n                </Button>\n                <Button type='submit' variant=\"primary\">Login</Button>\n              </Modal.Footer>\n            </Form>\n\n        </Modal>\n      </>\n    );\n  }\n\n\n  \n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/hubertyu/Code/reactExpressDemo/src/loginRegister/components/header/LoginRegister.js\";\nimport React, { useState, useContext } from 'react';\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport { FormContext } from '../../context';\nexport const Login = () => {\n  const [show, setShow] = useState(false);\n  const [formErrors, setErrors] = useState({});\n  const [validated, setValidated] = useState(false);\n  const formContext = useContext(FormContext);\n\n  const validate = () => {\n    let errors = {};\n    setValidated(true);\n\n    if (formContext.state.email.length > 0) {\n      if (!/^\\w+([-]?\\w+)*@\\w+([-]?\\w+)*(\\.\\w{2,3})+$/.test(formContext.state.email)) {\n        errors.email = 'Email Is Invalidated';\n      }\n    } else {\n      errors.email = 'Email Address Is Required';\n    }\n\n    if (formContext.state.password.length === 0) {\n      errors.password = 'Password Is Required';\n    }\n\n    return errors;\n  };\n\n  const handleClose = () => {\n    setShow(false);\n    setValidated(false);\n  };\n\n  const handleShow = () => setShow(true);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    setErrors(validate());\n  };\n\n  console.log(formErrors.email.length);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: handleShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    backdrop: \"static\",\n    keyboard: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Login The Account\")), /*#__PURE__*/React.createElement(Form, {\n    noValidate: true,\n    validated: validated,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, \"User Account\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Enter Email\",\n    onChange: event => {\n      formContext.dispatch({\n        type: 'changeUserInfo',\n        payload: event.currentTarget\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }), formErrors.email.length > 0 && /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, formErrors.email)), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Password\",\n    onChange: event => {\n      formContext.dispatch({\n        type: 'changeUserInfo',\n        payload: event.currentTarget\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }), formErrors.password.length > 0 && /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, formErrors.password)), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicCheckbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"checkbox\",\n    name: \"checkbox\",\n    label: \"Remember Me\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, \"Login\")))));\n};","map":{"version":3,"sources":["/home/hubertyu/Code/reactExpressDemo/src/loginRegister/components/header/LoginRegister.js"],"names":["React","useState","useContext","Modal","Button","Form","FormContext","Login","show","setShow","formErrors","setErrors","validated","setValidated","formContext","validate","errors","state","email","length","test","password","handleClose","handleShow","handleSubmit","event","preventDefault","stopPropagation","console","log","dispatch","type","payload","currentTarget"],"mappings":"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","sourcesContent":["import React, {useState,useContext} from 'react';\nimport { Modal,Button,Form } from 'react-bootstrap';\nimport {FormContext} from '../../context';\n\nexport const Login = () => {\n    const [show, setShow] = useState(false);\n    const [formErrors,setErrors] = useState({})\n    const [validated, setValidated] = useState(false);\n    const formContext = useContext(FormContext);\n\n    const validate = ()=>{\n      let errors ={};\n      setValidated(true);\n      if(formContext.state.email.length>0){\n        if (!/^\\w+([-]?\\w+)*@\\w+([-]?\\w+)*(\\.\\w{2,3})+$/.test(formContext.state.email))\n        {\n          errors.email = 'Email Is Invalidated';\n        } \n      } else {\n        errors.email = 'Email Address Is Required'\n      }\n      if(formContext.state.password.length===0){\n        errors.password = 'Password Is Required';\n      }\n      return errors;\n    }\n    const handleClose = () => {\n      setShow(false);\n      setValidated(false);\n    };\n    const handleShow = () => setShow(true);\n    const handleSubmit = (event) => {\n      event.preventDefault();\n      event.stopPropagation();\n      setErrors(validate());\n    }\n    console.log(formErrors.email.length);\n    return (\n      <>\n        <Button variant=\"primary\" onClick={handleShow}>\n          Login\n        </Button>\n  \n        <Modal\n          show={show}\n          onHide={handleClose}\n          backdrop=\"static\"\n          keyboard={false}\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>Login The Account</Modal.Title>\n          </Modal.Header>\n\n            <Form noValidate validated={validated} onSubmit={handleSubmit}>\n              <Modal.Body>\n\n                  <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>User Account</Form.Label>\n                    <Form.Control required type=\"email\" name=\"email\" placeholder=\"Enter Email\" onChange={\n                      (event)=>\n                        {\n                          formContext.dispatch({\n                            type:'changeUserInfo',\n                            payload:event.currentTarget\n                          })\n                        }\n                      }/>      \n            {\n              formErrors.email.length>0&&\n                <Form.Control.Feedback type=\"invalid\">\n                  {formErrors.email}\n                </Form.Control.Feedback>\n            }\n         \n                \n                  </Form.Group>\n\n                  <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control required type=\"password\" name=\"password\" placeholder=\"Password\" onChange={\n                      (event)=>\n                        {\n                          formContext.dispatch({\n                            type:'changeUserInfo',\n                            payload:event.currentTarget\n                          })\n                        }\n                      }/>\n\n            {\n              formErrors.password.length>0&&\n                <Form.Control.Feedback type=\"invalid\">\n                  {formErrors.password}\n                </Form.Control.Feedback>\n            }\n\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formBasicCheckbox\">\n                    <Form.Check type=\"checkbox\" name=\"checkbox\" label=\"Remember Me\" />\n                  </Form.Group>\n\n              </Modal.Body>\n              <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                  Close\n                </Button>\n                <Button type='submit' variant=\"primary\">Login</Button>\n              </Modal.Footer>\n            </Form>\n\n        </Modal>\n      </>\n    );\n  }\n\n\n  \n"]},"metadata":{},"sourceType":"module"}
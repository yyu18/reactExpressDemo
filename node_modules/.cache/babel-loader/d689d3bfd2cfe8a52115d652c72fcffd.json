{"ast":null,"code":"var _jsxFileName = \"/home/hubertyu/Code/reactExpressDemo/src/loginRegister/forgotPassword/ResetPassword.js\";\nimport React, { useState, useMemo } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Button, Form, Container, Row, Col } from 'react-bootstrap';\nvar resetPassword = 'http://192.168.2.24:4000/checkResetLink';\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nconst ResetPassword = () => {\n  let query = useQuery();\n  const [errors, setErrors] = useState({});\n  const [password, setPassword] = useState({\n    password: '',\n    confirmPassword: ''\n  });\n  useMemo(() => {\n    console.log(errors.status);\n\n    if (errors.status === undefined) {\n      fetch(resetPassword, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          token: query.get('token')\n        })\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n\n        if (data.status === false) {\n          setErrors(data);\n        }\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n    }\n  }, [errors, query]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    var errors = validator(password);\n    setErrors(errors);\n\n    if (Object.keys(errors).length === 0) {\n      fetch(resetPassword, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          password: password.password,\n          token: query.get('token')\n        })\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n    }\n  };\n\n  const validator = userInfo => {\n    let errors = {};\n\n    if (userInfo.password !== undefined) {\n      if (userInfo.password.length === 0) {\n        errors.password = 'Password Is Required';\n      }\n    } else {\n      errors.password = 'Password Is Required';\n    }\n\n    if (userInfo.confirmPassword !== undefined) {\n      if (userInfo.confirmPassword.length === 0) {\n        errors.confirmPassword = 'Password Is Required';\n      } else if (userInfo.confirmPassword !== userInfo.password) {\n        errors.confirmPassword = \"Password Is Not Compared\";\n      }\n    } else {\n      errors.password = 'Password Is Required';\n    }\n\n    return errors;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, //errors.status \n  errors.status !== undefined ? /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, errors.info) : /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    xs: 2,\n    md: 4,\n    lg: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    noValidate: true,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 41\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Enter Password\",\n    onChange: event => {\n      setPassword({ ...password,\n        [event.currentTarget.name]: event.currentTarget.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 41\n    }\n  }), errors.password && /*#__PURE__*/React.createElement(Form.Text, {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 49\n    }\n  }, errors.password)), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formConfirmPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 41\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    placeholder: \"Confirm Password\",\n    onChange: event => {\n      setPassword({ ...password,\n        [event.currentTarget.name]: event.currentTarget.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 41\n    }\n  }), errors.confirmPassword && /*#__PURE__*/React.createElement(Form.Text, {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 49\n    }\n  }, errors.confirmPassword)), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 33\n    }\n  }, \"Submit\"))), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 25\n    }\n  }))));\n};\n\nexport default ResetPassword;","map":{"version":3,"sources":["/home/hubertyu/Code/reactExpressDemo/src/loginRegister/forgotPassword/ResetPassword.js"],"names":["React","useState","useMemo","useLocation","Button","Form","Container","Row","Col","resetPassword","useQuery","URLSearchParams","search","ResetPassword","query","errors","setErrors","password","setPassword","confirmPassword","console","log","status","undefined","fetch","method","headers","body","JSON","stringify","token","get","then","response","json","data","catch","error","handleSubmit","event","preventDefault","stopPropagation","validator","Object","keys","length","userInfo","info","currentTarget","name","value","color"],"mappings":"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","sourcesContent":["import React, { useState,useMemo } from 'react';\nimport { useLocation} from 'react-router-dom'\nimport { Button,Form,Container,Row,Col } from 'react-bootstrap';\nvar resetPassword = 'http://192.168.2.24:4000/checkResetLink';\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n  }\n\nconst ResetPassword = ()=>{\n    let query = useQuery();\n    const [errors,setErrors] = useState({});\n\n    const [password,setPassword] = useState({\n        password:'',\n        confirmPassword:''\n    });\n\n    useMemo(()=>{\n        console.log(errors.status);\n        if(errors.status===undefined){\n                fetch(resetPassword, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({\n                        token:query.get('token')\n                    }),\n                  })\n                  .then(response => response.json())\n                  .then(data => {\n                    console.log(data);\n                    if(data.status===false){\n                        setErrors(data);\n                    }\n                  }).catch((error) => {\n                      console.error('Error:', error);\n                  });  \n                }\n            },[errors,query])\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n        var errors = validator(password);\n        setErrors(errors);\n        if(Object.keys(errors).length === 0 ){\n            fetch(resetPassword, {\n                method: 'POST', \n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    password:password.password,\n                    token:query.get('token')\n                }),\n              })\n              .then(response => response.json())\n              .then(data => {\n                console.log(data);\n              }).catch((error) => {\n                  console.error('Error:', error);\n              }); \n        }\n    }\n\n\n    const validator = (userInfo) => {\n        let errors = {};\n        \n        if(userInfo.password!==undefined){\n          if(userInfo.password.length===0){\n                errors.password = 'Password Is Required'\n          }\n        } else {\n            errors.password = 'Password Is Required'\n        }\n\n        if(userInfo.confirmPassword!==undefined){\n            if(userInfo.confirmPassword.length===0){\n                errors.confirmPassword = 'Password Is Required'\n                } else if(userInfo.confirmPassword!==userInfo.password) {\n                        errors.confirmPassword = \"Password Is Not Compared\";\n                    } \n        } else {\n            errors.password = 'Password Is Required'\n        }\n        return errors;\n}\n\n    return(\n        <div>\n        {\n            //errors.status \n        errors.status!==undefined ? \n            <h1>{errors.info}</h1>\n            :\n            <Container>\n                        <Row  xs={2} md={4} lg={6}>\n                        <Col></Col>\n                        <Col lg={4}>\n                                <Form noValidate onSubmit={handleSubmit}>\n                                <Form.Group controlId=\"formPassword\">\n                                        <Form.Label>Password</Form.Label>\n                                        <Form.Control type=\"password\" name = \"password\" placeholder=\"Enter Password\" onChange={(event)=>{\n                                                \n                                                setPassword({\n                                                ...password,\n                                                [event.currentTarget.name]:event.currentTarget.value\n                                                })\n                                                \n                                        }} />\n                                          {\n                                                errors.password&&\n                                                <Form.Text style={{color:'red'}}>\n                                                        {errors.password}\n                                                </Form.Text>\n                                         } \n                                </Form.Group>\n\n                                <Form.Group controlId=\"formConfirmPassword\">\n                                        <Form.Label>Confirm Password</Form.Label>\n                                        <Form.Control type=\"password\" name = \"confirmPassword\" placeholder=\"Confirm Password\" onChange={(event)=>{\n                                                \n                                                setPassword({\n                                                    ...password,\n                                                    [event.currentTarget.name]:event.currentTarget.value\n                                                })\n                                                \n                                        }} />\n                                          {\n                                                errors.confirmPassword&&\n                                                <Form.Text style={{color:'red'}}>\n                                                        {errors.confirmPassword}\n                                                </Form.Text>\n                                         } \n                                </Form.Group>\n                                <Button variant=\"primary\" type=\"submit\">\n                                        Submit\n                                </Button>  \n                                </Form>\n                        </Col>\n                        <Col></Col>\n                                \n                        </Row>\n                </Container>\n       \n        }\n        </div> \n    )\n} \nexport default ResetPassword; "]},"metadata":{},"sourceType":"module"}